VPython is maintained at github.com/vpython, where there
are two components: visual contains the main files, and
vpython.docs contains the documentation files.

To build from scratch, copy the files from the github visual folder into a
new folder named (say) source. Create a folder "docs" in source, and copy
into docs the files from the github vpython.docs folder. Build in Source.

   Set the version number appropriately in configure.ac, 
   and in the first line of site-packages/vis/__init__.py.

Windows and Mac builds are now special to them; 
see VCBuild/VCBuild.txt and MAC-OSX.txt.

In site-packages/vidle the file "edit with vidle.reg" contains registry
settings for enabling correct startup of VIDLE by right-clicking a .py file.
These settings should be imposed by the VPython installer.

If you do development of the Visual source code:

A convenient development environment on Linux (and other platforms) is
Eclipse. On Ubuntu Linux, the package manager version of Eclipse doesn't
seem to work, due to issues with java licensing. The easy thing to do is
simply to use the package manager to install java, but to download Eclipse
from eclipse.org. 
	
If you use eclipse, choose "Git Repositories" and click the Git icon
that has the hint "Clone a Git Repository and add the clone to this view".

For Linux:

In src/gtk2 there is a simple non-autoconf makefile for Ubuntu 8 as of Nov. 2008.
It is unlikely to be kept up to date, but it gives an example of the basic
elements of what the rather complex autoconf machinery needs to produce.

Makefile.in, configure, and the helper programs for them are not maintained
in the respository. You will have to run the autogen.sh script after a fresh checkout to 
create configure. You need to execute "chmod +x autogen.sh" in order to be 
able to execute ./autogen.sh. 

The result of executing autogen.sh is to produce the following files:
	configure (from configure.ac and acinclude.m4)
	Makefile.in (from Makefile.am)
	aclocal.m4
	config.guess, config.sub, ltmain.sh, missing

The source distribution is built with "make dist-bzip2". 
"make bzip" is also supported.

This project uses tabs for indentation in C++, and spaces in Python.

We do not use a separate developer's mailing list, so please direct any 
development-related questions to visualpython-users@lists.sourceforge.net.
